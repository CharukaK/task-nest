openapi: 3.0.0
info:
  title: Todo Service API
  version: 1.0.0
  description: API for managing todos in a Todo application

paths:
  /status:
    get:
      summary: Check Service Status
      description: Returns the current status of the service.
      responses:
        '200':
          description: Service is running
          content:
            text/plain:
              example: Notification Service is running
  /add_todo:
    post:
      summary: Add a new todo item
      description: Endpoint for adding a new todo item.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoItem'
      responses:
        '201':
          description: Todo item added successfully
        '401':
          description: Unauthorized
        '500':
          description: Server error
      security:
        - bearerAuth: []

  /get_todos:
    get:
      summary: Retrieve all todos
      description: Endpoint for retrieving all todo items for a user.
      responses:
        '200':
          description: List of todo items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoItem'
        '401':
          description: Unauthorized
        '500':
          description: Server error
      security:
        - bearerAuth: []

  /delete_todo/{todo_id}:
    delete:
      summary: Delete a todo item
      description: Endpoint for deleting a specific todo item.
      parameters:
        - in: path
          name: todo_id
          required: true
          schema:
            type: integer
          description: The ID of the todo item to delete
      responses:
        '200':
          description: Todo item deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Todo item not found
        '500':
          description: Server error
      security:
        - bearerAuth: []

components:
  schemas:
    TodoItem:
      type: object
      required:
        - text
      properties:
        id:
          type: integer
          description: The unique identifier for the todo item
        text:
          type: string
          description: The text of the todo item

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
